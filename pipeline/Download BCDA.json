{
	"name": "Download BCDA",
	"properties": {
		"activities": [
			{
				"name": "Get Token",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"accept": "application/json"
					},
					"url": "https://sandbox.bcda.cms.gov/auth/token",
					"authentication": {
						"type": "Basic",
						"username": "e75679c2-1b58-4cf5-8664-d3706de8caf5",
						"password": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "CMSSecrets",
								"type": "LinkedServiceReference"
							},
							"secretName": "cms-adv-secret"
						}
					}
				}
			},
			{
				"name": "Start Job",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"headers": {
						"accept": "application/fhir+json",
						"Prefer": "respond-async",
						"Authorization": {
							"value": "@concat('Bearer ',activity('Get Token').output.access_token)",
							"type": "Expression"
						}
					},
					"url": "https://sandbox.bcda.cms.gov/api/v2/Group/all/$export"
				}
			},
			{
				"name": "Wait for Job To Finish",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Start Job",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(contains(activity('Get Job Complete').output,'Response'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Get Job Complete",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "GET",
								"headers": {
									"accept": "application/fhir+json",
									"Authorization": {
										"value": "@concat('Bearer ', activity('Get Token').output.access_token)",
										"type": "Expression"
									}
								},
								"url": {
									"value": "@activity('Start Job').output.ADFWebActivityResponseHeaders['Content-Location']",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Test For Completion",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get Job Complete",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(activity('Get Job Complete').output,'Response')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Delay 5 Seconds",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 5
										}
									}
								]
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Job Complete",
									"dependencyConditions": [
										"Skipped"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "TestVariable",
								"value": {
									"value": "@activity('Get Job Complete').status",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "FX Each File",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Wait for Job To Finish",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Job Complete').output.output",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Write File From Website",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET",
										"additionalHeaders": {
											"value": "@{concat('Authorization: Bearer ', activity('Get Token').output.access_token)}",
											"type": "Expression"
										},
										"requestTimeout": "00:05:00"
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "CMSBCDA_Download",
									"type": "DatasetReference",
									"parameters": {
										"fullurl": {
											"value": "@item().url",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "JSONDump",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@concat(item().type,'.ndjson')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"filetype": {
				"type": "String"
			},
			"fileurl": {
				"type": "String"
			},
			"TestVariable": {
				"type": "String"
			}
		},
		"annotations": []
	}
}